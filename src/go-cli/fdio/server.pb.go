// Code generated by protoc-gen-gogo.
// source: server.proto
// DO NOT EDIT!

/*
	Package fdio is a generated protocol buffer package.

	It is generated from these files:
		server.proto
		vpe.api.proto

	It has these top-level messages:
		CvlApiCreateVlanSubifT
		CvlApiCreateVlanSubifReplyT
		CvlApiSwInterfaceSetMplsEnableT
		CvlApiSwInterfaceSetMplsEnableReplyT
		CvlApiProxyArpAddDelT
		CvlApiProxyArpAddDelReplyT
		CvlApiProxyArpIntfcEnableDisableT
		CvlApiProxyArpIntfcEnableDisableReplyT
		CvlApiResetVrfT
		CvlApiResetVrfReplyT
		CvlApiIsAddressReachableT
		CvlApiWantStatsT
		CvlApiWantStatsReplyT
		CvlApiIp4FibCounterT
		CvlApiVnetIp4FibCountersT
		CvlApiIp4NbrCounterT
		CvlApiVnetIp4NbrCountersT
		CvlApiIp6FibCounterT
		CvlApiVnetIp6FibCountersT
		CvlApiIp6NbrCounterT
		CvlApiVnetIp6NbrCountersT
		CvlApiVnetGetSummaryStatsT
		CvlApiVnetSummaryStatsReplyT
		CvlApiOamEventT
		CvlApiWantOamEventsT
		CvlApiWantOamEventsReplyT
		CvlApiOamAddDelT
		CvlApiOamAddDelReplyT
		CvlApiResetFibT
		CvlApiResetFibReplyT
		CvlApiCreateLoopbackT
		CvlApiCreateLoopbackReplyT
		CvlApiCreateLoopbackInstanceT
		CvlApiCreateLoopbackInstanceReplyT
		CvlApiDeleteLoopbackT
		CvlApiDeleteLoopbackReplyT
		CvlApiControlPingT
		CvlApiControlPingReplyT
		CvlApiCliRequestT
		CvlApiCliInbandT
		CvlApiCliReplyT
		CvlApiCliInbandReplyT
		CvlApiSetArpNeighborLimitT
		CvlApiSetArpNeighborLimitReplyT
		CvlApiL2PatchAddDelT
		CvlApiL2PatchAddDelReplyT
		CvlApiSwInterfaceSetVpathT
		CvlApiSwInterfaceSetVpathReplyT
		CvlApiSwInterfaceSetL2XconnectT
		CvlApiSwInterfaceSetL2XconnectReplyT
		CvlApiSwInterfaceSetL2BridgeT
		CvlApiSwInterfaceSetL2BridgeReplyT
		CvlApiBdIpMacAddDelT
		CvlApiBdIpMacAddDelReplyT
		CvlApiClassifySetInterfaceIpTableT
		CvlApiClassifySetInterfaceIpTableReplyT
		CvlApiClassifySetInterfaceL2TablesT
		CvlApiClassifySetInterfaceL2TablesReplyT
		CvlApiGetNodeIndexT
		CvlApiGetNodeIndexReplyT
		CvlApiAddNodeNextT
		CvlApiAddNodeNextReplyT
		CvlApiL2InterfaceEfpFilterT
		CvlApiL2InterfaceEfpFilterReplyT
		CvlApiCreateSubifT
		CvlApiCreateSubifReplyT
		CvlApiShowVersionT
		CvlApiShowVersionReplyT
		CvlApiInterfaceNameRenumberT
		CvlApiInterfaceNameRenumberReplyT
		CvlApiWantIp4ArpEventsT
		CvlApiWantIp4ArpEventsReplyT
		CvlApiIp4ArpEventT
		CvlApiWantIp6NdEventsT
		CvlApiWantIp6NdEventsReplyT
		CvlApiIp6NdEventT
		CvlApiInputAclSetInterfaceT
		CvlApiInputAclSetInterfaceReplyT
		CvlApiGetNodeGraphT
		CvlApiGetNodeGraphReplyT
		CvlApiIoamEnableT
		CvlApiIoamEnableReplyT
		CvlApiIoamDisableT
		CvlApiIoamDisableReplyT
		CvlApiGetNextIndexT
		CvlApiGetNextIndexReplyT
		CvlApiPgCreateInterfaceT
		CvlApiPgCreateInterfaceReplyT
		CvlApiPgCaptureT
		CvlApiPgCaptureReplyT
		CvlApiPgEnableDisableT
		CvlApiPgEnableDisableReplyT
		CvlApiIpSourceAndPortRangeCheckAddDelT
		CvlApiIpSourceAndPortRangeCheckAddDelReplyT
		CvlApiIpSourceAndPortRangeCheckInterfaceAddDelT
		CvlApiIpSourceAndPortRangeCheckInterfaceAddDelReplyT
		CvlApiDeleteSubifT
		CvlApiDeleteSubifReplyT
		CvlApiPuntT
		CvlApiPuntReplyT
		CvlApiFeatureEnableDisableT
		CvlApiFeatureEnableDisableReplyT
*/
package fdio

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Interface service

type InterfaceClient interface {
	// Create a loopback Interface
	CreateLoopback(ctx context.Context, in *CvlApiCreateLoopbackT, opts ...grpc.CallOption) (*CvlApiCreateLoopbackReplyT, error)
}

type interfaceClient struct {
	cc *grpc.ClientConn
}

func NewInterfaceClient(cc *grpc.ClientConn) InterfaceClient {
	return &interfaceClient{cc}
}

func (c *interfaceClient) CreateLoopback(ctx context.Context, in *CvlApiCreateLoopbackT, opts ...grpc.CallOption) (*CvlApiCreateLoopbackReplyT, error) {
	out := new(CvlApiCreateLoopbackReplyT)
	err := grpc.Invoke(ctx, "/fdio.Interface/CreateLoopback", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Interface service

type InterfaceServer interface {
	// Create a loopback Interface
	CreateLoopback(context.Context, *CvlApiCreateLoopbackT) (*CvlApiCreateLoopbackReplyT, error)
}

func RegisterInterfaceServer(s *grpc.Server, srv InterfaceServer) {
	s.RegisterService(&_Interface_serviceDesc, srv)
}

func _Interface_CreateLoopback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CvlApiCreateLoopbackT)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterfaceServer).CreateLoopback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdio.Interface/CreateLoopback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterfaceServer).CreateLoopback(ctx, req.(*CvlApiCreateLoopbackT))
	}
	return interceptor(ctx, in, info, handler)
}

var _Interface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fdio.Interface",
	HandlerType: (*InterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLoopback",
			Handler:    _Interface_CreateLoopback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptorServer) }

var fileDescriptorServer = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x4b, 0xc9, 0xcc, 0x97, 0xe2,
	0x2d, 0x2b, 0x48, 0xd5, 0x4b, 0x2c, 0xc8, 0x84, 0x08, 0x1a, 0xa5, 0x73, 0x71, 0x7a, 0xe6, 0x95,
	0xa4, 0x16, 0xa5, 0x25, 0x26, 0xa7, 0x0a, 0x45, 0x71, 0xf1, 0x39, 0x17, 0xa5, 0x26, 0x96, 0xa4,
	0xfa, 0xe4, 0xe7, 0x17, 0x24, 0x25, 0x26, 0x67, 0x0b, 0xc9, 0xeb, 0x81, 0x34, 0xe9, 0x25, 0x97,
	0xe5, 0xc4, 0x03, 0xf5, 0xc4, 0x27, 0x83, 0x65, 0xe3, 0x73, 0xa0, 0xd2, 0xf1, 0x25, 0x52, 0xaa,
	0xf8, 0x15, 0x14, 0xa5, 0x16, 0xe4, 0x54, 0xc6, 0x97, 0x28, 0x31, 0x38, 0x89, 0x9d, 0x78, 0x24,
	0xc7, 0x78, 0x01, 0x88, 0x1f, 0x00, 0xf1, 0x8c, 0xc7, 0x72, 0x0c, 0x51, 0x60, 0xf7, 0x24, 0xb1,
	0x81, 0xdd, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xf1, 0x5f, 0x51, 0xac, 0x00, 0x00,
	0x00,
}
